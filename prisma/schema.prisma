generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  name      String?
  password  String?
  provider  Provider?
  avatar    String?
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  roles     Role[]
  tokens    Token[]
  isBlocked Boolean   @default(false) @map("is_blocked")
  isOnline  Boolean   @default(false) // Додайте поле isOnline
  chats     Chat[]
  messages  Message[]

  @@map("users")
}

model Chat {
  id        String    @id @default(uuid())
  name      String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  ownerId   String    @map("owner_id")
  users     User[] // Many-to-many relationship with User
  messages  Message[] // One-to-many relationship with Message

  @@map("chats")
}

model Message {
  id        String   @id @default(uuid())
  content   String
  sender    User     @relation(fields: [senderId], references: [id])
  senderId  String   @map("sender_id")
  imageUrl  String?
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId    String   @map("chat_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("messages")
}

model Token {
  token     String   @unique
  exp       DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  userAgent String   @map("user_agent")

  @@map("tokens")
}

enum Role {
  ADMIN
  USER
}

enum Provider {
  GOOGLE
}
